import bibix
import maven
import jvm
import curl
from bibix.plugins() import ktjvm
from bibix.plugins() import protobuf

implTemplate = bibix.genRuleImplTemplateKt(
  rules = [
    java,
    kotlin,
    web,
  ],
  types = [OS, protobuf.ProtoSchema],
  implName = "com.giyeok.bibix.plugins.grpc.CompileImpl",
  implInterfaceName = "com.giyeok.bibix.plugins.grpc.CompileInterface",
)

impl = ktjvm.library(
  srcs = (implTemplate as list<file>) + glob("src/**/*.kt"),
  deps = [
    bibix.base(),
    maven.dep("org.jetbrains.kotlin", "kotlin-stdlib-jdk8", "1.6.10"),
  ],
)

namespace javaPlugin {
  def url(
    version: string,
    os: OS = env.os,
    arch: Arch = env.arch,
  ): string = impl:com.giyeok.bibix.plugins.grpc.JavaPlugin:url

  def createEnv(pluginExe: file): file =
    impl:com.giyeok.bibix.plugins.grpc.JavaPlugin:createEnv
}

javaPluginEnv = javaPlugin.createEnv(curl.download(javaPlugin.url("1.46.0")))

def java(
  schema: protobuf.ProtoSchema,
  protocPath: directory = protobuf.protocPath,
  pluginPath: file = javaPluginEnv,
  os: OS = env.os,
): set<file> = impl:com.giyeok.bibix.plugins.grpc.Compile:java

namespace kotlinPlugin {
  def url(version: string): string =
    impl:com.giyeok.bibix.plugins.grpc.KotlinPlugin:url

  def createEnv(pluginJar: file): file =
    impl:com.giyeok.bibix.plugins.grpc.KotlinPlugin:createEnv
}

kotlinPluginEnv = kotlinPlugin.createEnv(curl.download(kotlinPlugin.url("1.2.1")))

def kotlin(
  schema: protobuf.ProtoSchema,
  protocPath: directory = protobuf.protocPath,
  pluginPath: file = kotlinPluginEnv,
  os: OS = env.os,
): set<file> = impl:com.giyeok.bibix.plugins.grpc.Compile:kotlin

def web(
  schema: protobuf.ProtoSchema,
  protocPath: directory = protobuf.protocPath,
  pluginPath: file,
  os: OS = env.os,
): set<file> = impl:com.giyeok.bibix.plugins.grpc.Compile:web
