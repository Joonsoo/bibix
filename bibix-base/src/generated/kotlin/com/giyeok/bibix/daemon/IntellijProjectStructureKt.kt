//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: api.proto

package com.giyeok.bibix.daemon;

@kotlin.jvm.JvmName("-initializeintellijProjectStructure")
public inline fun intellijProjectStructure(block: com.giyeok.bibix.daemon.IntellijProjectStructureKt.Dsl.() -> kotlin.Unit): com.giyeok.bibix.daemon.BibixDaemonApiProto.IntellijProjectStructure =
  com.giyeok.bibix.daemon.IntellijProjectStructureKt.Dsl._create(com.giyeok.bibix.daemon.BibixDaemonApiProto.IntellijProjectStructure.newBuilder()).apply { block() }._build()
public object IntellijProjectStructureKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.giyeok.bibix.daemon.BibixDaemonApiProto.IntellijProjectStructure.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.giyeok.bibix.daemon.BibixDaemonApiProto.IntellijProjectStructure.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.giyeok.bibix.daemon.BibixDaemonApiProto.IntellijProjectStructure = _builder.build()

    /**
     * <code>.com.giyeok.bibix.daemon.IntellijProjectNode project = 1;</code>
     */
    public var project: com.giyeok.bibix.daemon.BibixDaemonApiProto.IntellijProjectNode
      @JvmName("getProject")
      get() = _builder.getProject()
      @JvmName("setProject")
      set(value) {
        _builder.setProject(value)
      }
    /**
     * <code>.com.giyeok.bibix.daemon.IntellijProjectNode project = 1;</code>
     */
    public fun clearProject() {
      _builder.clearProject()
    }
    /**
     * <code>.com.giyeok.bibix.daemon.IntellijProjectNode project = 1;</code>
     * @return Whether the project field is set.
     */
    public fun hasProject(): kotlin.Boolean {
      return _builder.hasProject()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.giyeok.bibix.daemon.BibixDaemonApiProto.IntellijProjectStructure.copy(block: com.giyeok.bibix.daemon.IntellijProjectStructureKt.Dsl.() -> kotlin.Unit): com.giyeok.bibix.daemon.BibixDaemonApiProto.IntellijProjectStructure =
  com.giyeok.bibix.daemon.IntellijProjectStructureKt.Dsl._create(this.toBuilder()).apply { block() }._build()

val com.giyeok.bibix.daemon.BibixDaemonApiProto.IntellijProjectStructureOrBuilder.projectOrNull: com.giyeok.bibix.daemon.BibixDaemonApiProto.IntellijProjectNode?
  get() = if (hasProject()) getProject() else null

