//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: api.proto

package com.giyeok.bibix.daemon;

@kotlin.jvm.JvmSynthetic
public inline fun actionInfo(block: com.giyeok.bibix.daemon.ActionInfoKt.Dsl.() -> kotlin.Unit): com.giyeok.bibix.daemon.BibixDaemonApiProto.ActionInfo =
  com.giyeok.bibix.daemon.ActionInfoKt.Dsl._create(com.giyeok.bibix.daemon.BibixDaemonApiProto.ActionInfo.newBuilder()).apply { block() }._build()
public object ActionInfoKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.giyeok.bibix.daemon.BibixDaemonApiProto.ActionInfo.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.giyeok.bibix.daemon.BibixDaemonApiProto.ActionInfo.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.giyeok.bibix.daemon.BibixDaemonApiProto.ActionInfo = _builder.build()

    /**
     * <code>string builtin_plugin = 1;</code>
     */
    public var builtinPlugin: kotlin.String
      @JvmName("getBuiltinPlugin")
      get() = _builder.getBuiltinPlugin()
      @JvmName("setBuiltinPlugin")
      set(value) {
        _builder.setBuiltinPlugin(value)
      }
    /**
     * <code>string builtin_plugin = 1;</code>
     */
    public fun clearBuiltinPlugin() {
      _builder.clearBuiltinPlugin()
    }

    /**
     * <code>.com.giyeok.bibix.RuleImplId rule = 2;</code>
     */
    public var rule: com.giyeok.bibix.BibixIdProto.RuleImplId
      @JvmName("getRule")
      get() = _builder.getRule()
      @JvmName("setRule")
      set(value) {
        _builder.setRule(value)
      }
    /**
     * <code>.com.giyeok.bibix.RuleImplId rule = 2;</code>
     */
    public fun clearRule() {
      _builder.clearRule()
    }
    /**
     * <code>.com.giyeok.bibix.RuleImplId rule = 2;</code>
     * @return Whether the rule field is set.
     */
    public fun hasRule(): kotlin.Boolean {
      return _builder.hasRule()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class ArgsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>map&lt;string, .com.giyeok.bibix.daemon.BibixExpr&gt; args = 3;</code>
     */
     public val args: com.google.protobuf.kotlin.DslMap<kotlin.String, com.giyeok.bibix.daemon.BibixDaemonApiProto.BibixExpr, ArgsProxy>
      @kotlin.jvm.JvmSynthetic
      @JvmName("getArgsMap")
      get() = com.google.protobuf.kotlin.DslMap(
        _builder.getArgsMap()
      )
    /**
     * <code>map&lt;string, .com.giyeok.bibix.daemon.BibixExpr&gt; args = 3;</code>
     */
    @JvmName("putArgs")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, com.giyeok.bibix.daemon.BibixDaemonApiProto.BibixExpr, ArgsProxy>
      .put(key: kotlin.String, value: com.giyeok.bibix.daemon.BibixDaemonApiProto.BibixExpr) {
         _builder.putArgs(key, value)
       }
    /**
     * <code>map&lt;string, .com.giyeok.bibix.daemon.BibixExpr&gt; args = 3;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("setArgs")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslMap<kotlin.String, com.giyeok.bibix.daemon.BibixDaemonApiProto.BibixExpr, ArgsProxy>
      .set(key: kotlin.String, value: com.giyeok.bibix.daemon.BibixDaemonApiProto.BibixExpr) {
         put(key, value)
       }
    /**
     * <code>map&lt;string, .com.giyeok.bibix.daemon.BibixExpr&gt; args = 3;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("removeArgs")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, com.giyeok.bibix.daemon.BibixDaemonApiProto.BibixExpr, ArgsProxy>
      .remove(key: kotlin.String) {
         _builder.removeArgs(key)
       }
    /**
     * <code>map&lt;string, .com.giyeok.bibix.daemon.BibixExpr&gt; args = 3;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("putAllArgs")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, com.giyeok.bibix.daemon.BibixDaemonApiProto.BibixExpr, ArgsProxy>
      .putAll(map: kotlin.collections.Map<kotlin.String, com.giyeok.bibix.daemon.BibixDaemonApiProto.BibixExpr>) {
         _builder.putAllArgs(map)
       }
    /**
     * <code>map&lt;string, .com.giyeok.bibix.daemon.BibixExpr&gt; args = 3;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("clearArgs")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, com.giyeok.bibix.daemon.BibixDaemonApiProto.BibixExpr, ArgsProxy>
      .clear() {
         _builder.clearArgs()
       }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.giyeok.bibix.daemon.BibixDaemonApiProto.ActionInfo.copy(block: com.giyeok.bibix.daemon.ActionInfoKt.Dsl.() -> kotlin.Unit): com.giyeok.bibix.daemon.BibixDaemonApiProto.ActionInfo =
  com.giyeok.bibix.daemon.ActionInfoKt.Dsl._create(this.toBuilder()).apply { block() }._build()
