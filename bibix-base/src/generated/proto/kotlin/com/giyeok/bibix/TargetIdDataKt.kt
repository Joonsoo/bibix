// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: ids.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.giyeok.bibix;

@kotlin.jvm.JvmName("-initializetargetIdData")
public inline fun targetIdData(block: com.giyeok.bibix.TargetIdDataKt.Dsl.() -> kotlin.Unit): com.giyeok.bibix.BibixIdProto.TargetIdData =
  com.giyeok.bibix.TargetIdDataKt.Dsl._create(com.giyeok.bibix.BibixIdProto.TargetIdData.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `com.giyeok.bibix.TargetIdData`
 */
public object TargetIdDataKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.giyeok.bibix.BibixIdProto.TargetIdData.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.giyeok.bibix.BibixIdProto.TargetIdData.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.giyeok.bibix.BibixIdProto.TargetIdData = _builder.build()

    /**
     * `.com.giyeok.bibix.SourceId source_id = 1;`
     */
    public var sourceId: com.giyeok.bibix.BibixIdProto.SourceId
      @JvmName("getSourceId")
      get() = _builder.getSourceId()
      @JvmName("setSourceId")
      set(value) {
        _builder.setSourceId(value)
      }
    /**
     * `.com.giyeok.bibix.SourceId source_id = 1;`
     */
    public fun clearSourceId() {
      _builder.clearSourceId()
    }
    /**
     * `.com.giyeok.bibix.SourceId source_id = 1;`
     * @return Whether the sourceId field is set.
     */
    public fun hasSourceId(): kotlin.Boolean {
      return _builder.hasSourceId()
    }

    /**
     * ```
     * string target_name = 2;
     * ```
     *
     * `.com.giyeok.bibix.BuildRuleData build_rule = 2;`
     */
    public var buildRule: com.giyeok.bibix.BibixIdProto.BuildRuleData
      @JvmName("getBuildRule")
      get() = _builder.getBuildRule()
      @JvmName("setBuildRule")
      set(value) {
        _builder.setBuildRule(value)
      }
    /**
     * ```
     * string target_name = 2;
     * ```
     *
     * `.com.giyeok.bibix.BuildRuleData build_rule = 2;`
     */
    public fun clearBuildRule() {
      _builder.clearBuildRule()
    }
    /**
     * ```
     * string target_name = 2;
     * ```
     *
     * `.com.giyeok.bibix.BuildRuleData build_rule = 2;`
     * @return Whether the buildRule field is set.
     */
    public fun hasBuildRule(): kotlin.Boolean {
      return _builder.hasBuildRule()
    }

    /**
     * `.com.giyeok.bibix.ArgsMap args_map = 8;`
     */
    public var argsMap: com.giyeok.bibix.BibixIdProto.ArgsMap
      @JvmName("getArgsMap")
      get() = _builder.getArgsMap()
      @JvmName("setArgsMap")
      set(value) {
        _builder.setArgsMap(value)
      }
    /**
     * `.com.giyeok.bibix.ArgsMap args_map = 8;`
     */
    public fun clearArgsMap() {
      _builder.clearArgsMap()
    }
    /**
     * `.com.giyeok.bibix.ArgsMap args_map = 8;`
     * @return Whether the argsMap field is set.
     */
    public fun hasArgsMap(): kotlin.Boolean {
      return _builder.hasArgsMap()
    }
  }
}
@kotlin.jvm.JvmSynthetic
@com.google.errorprone.annotations.CheckReturnValue
public inline fun com.giyeok.bibix.BibixIdProto.TargetIdData.copy(block: com.giyeok.bibix.TargetIdDataKt.Dsl.() -> kotlin.Unit): com.giyeok.bibix.BibixIdProto.TargetIdData =
  com.giyeok.bibix.TargetIdDataKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val com.giyeok.bibix.BibixIdProto.TargetIdDataOrBuilder.sourceIdOrNull: com.giyeok.bibix.BibixIdProto.SourceId?
  get() = if (hasSourceId()) getSourceId() else null

public val com.giyeok.bibix.BibixIdProto.TargetIdDataOrBuilder.buildRuleOrNull: com.giyeok.bibix.BibixIdProto.BuildRuleData?
  get() = if (hasBuildRule()) getBuildRule() else null

public val com.giyeok.bibix.BibixIdProto.TargetIdDataOrBuilder.argsMapOrNull: com.giyeok.bibix.BibixIdProto.ArgsMap?
  get() = if (hasArgsMap()) getArgsMap() else null

