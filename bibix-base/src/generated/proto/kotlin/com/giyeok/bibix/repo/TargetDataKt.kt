// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: repo.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.giyeok.bibix.repo;

@kotlin.jvm.JvmName("-initializetargetData")
public inline fun targetData(block: com.giyeok.bibix.repo.TargetDataKt.Dsl.() -> kotlin.Unit): com.giyeok.bibix.repo.BibixRepoProto.TargetData =
  com.giyeok.bibix.repo.TargetDataKt.Dsl._create(com.giyeok.bibix.repo.BibixRepoProto.TargetData.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `com.giyeok.bibix.repo.TargetData`
 */
public object TargetDataKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.giyeok.bibix.repo.BibixRepoProto.TargetData.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.giyeok.bibix.repo.BibixRepoProto.TargetData.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.giyeok.bibix.repo.BibixRepoProto.TargetData = _builder.build()

    /**
     * `bytes target_id = 1;`
     */
    public var targetId: com.google.protobuf.ByteString
      @JvmName("getTargetId")
      get() = _builder.getTargetId()
      @JvmName("setTargetId")
      set(value) {
        _builder.setTargetId(value)
      }
    /**
     * `bytes target_id = 1;`
     */
    public fun clearTargetId() {
      _builder.clearTargetId()
    }

    /**
     * `.com.giyeok.bibix.TargetIdData target_id_data = 2;`
     */
    public var targetIdData: com.giyeok.bibix.BibixIdProto.TargetIdData
      @JvmName("getTargetIdData")
      get() = _builder.getTargetIdData()
      @JvmName("setTargetIdData")
      set(value) {
        _builder.setTargetIdData(value)
      }
    /**
     * `.com.giyeok.bibix.TargetIdData target_id_data = 2;`
     */
    public fun clearTargetIdData() {
      _builder.clearTargetIdData()
    }
    /**
     * `.com.giyeok.bibix.TargetIdData target_id_data = 2;`
     * @return Whether the targetIdData field is set.
     */
    public fun hasTargetIdData(): kotlin.Boolean {
      return _builder.hasTargetIdData()
    }

    /**
     * `optional .com.giyeok.bibix.repo.TargetState state = 3;`
     */
    public var state: com.giyeok.bibix.repo.BibixRepoProto.TargetState
      @JvmName("getState")
      get() = _builder.getState()
      @JvmName("setState")
      set(value) {
        _builder.setState(value)
      }
    /**
     * `optional .com.giyeok.bibix.repo.TargetState state = 3;`
     */
    public fun clearState() {
      _builder.clearState()
    }
    /**
     * `optional .com.giyeok.bibix.repo.TargetState state = 3;`
     * @return Whether the state field is set.
     */
    public fun hasState(): kotlin.Boolean {
      return _builder.hasState()
    }
    public val TargetDataKt.Dsl.stateOrNull: com.giyeok.bibix.repo.BibixRepoProto.TargetState?
      get() = _builder.stateOrNull
  }
}
@kotlin.jvm.JvmSynthetic
@com.google.errorprone.annotations.CheckReturnValue
public inline fun com.giyeok.bibix.repo.BibixRepoProto.TargetData.copy(block: com.giyeok.bibix.repo.TargetDataKt.Dsl.() -> kotlin.Unit): com.giyeok.bibix.repo.BibixRepoProto.TargetData =
  com.giyeok.bibix.repo.TargetDataKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val com.giyeok.bibix.repo.BibixRepoProto.TargetDataOrBuilder.targetIdDataOrNull: com.giyeok.bibix.BibixIdProto.TargetIdData?
  get() = if (hasTargetIdData()) getTargetIdData() else null

public val com.giyeok.bibix.repo.BibixRepoProto.TargetDataOrBuilder.stateOrNull: com.giyeok.bibix.repo.BibixRepoProto.TargetState?
  get() = if (hasState()) getState() else null

