// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: ids.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.giyeok.bibix;

@kotlin.jvm.JvmName("-initializesourceId")
public inline fun sourceId(block: com.giyeok.bibix.SourceIdKt.Dsl.() -> kotlin.Unit): com.giyeok.bibix.BibixIdProto.SourceId =
  com.giyeok.bibix.SourceIdKt.Dsl._create(com.giyeok.bibix.BibixIdProto.SourceId.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `com.giyeok.bibix.SourceId`
 */
public object SourceIdKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.giyeok.bibix.BibixIdProto.SourceId.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.giyeok.bibix.BibixIdProto.SourceId.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.giyeok.bibix.BibixIdProto.SourceId = _builder.build()

    /**
     * ```
     * external_plugin_objhash 인 경우를 제외하고는 비빅스 버전을 적어야 함
     * ```
     *
     * `optional string bibix_version = 1;`
     */
    public var bibixVersion: kotlin.String
      @JvmName("getBibixVersion")
      get() = _builder.getBibixVersion()
      @JvmName("setBibixVersion")
      set(value) {
        _builder.setBibixVersion(value)
      }
    /**
     * ```
     * external_plugin_objhash 인 경우를 제외하고는 비빅스 버전을 적어야 함
     * ```
     *
     * `optional string bibix_version = 1;`
     */
    public fun clearBibixVersion() {
      _builder.clearBibixVersion()
    }
    /**
     * ```
     * external_plugin_objhash 인 경우를 제외하고는 비빅스 버전을 적어야 함
     * ```
     *
     * `optional string bibix_version = 1;`
     * @return Whether the bibixVersion field is set.
     */
    public fun hasBibixVersion(): kotlin.Boolean {
      return _builder.hasBibixVersion()
    }

    /**
     * `.google.protobuf.Empty prelude_source = 2;`
     */
    public var preludeSource: com.google.protobuf.Empty
      @JvmName("getPreludeSource")
      get() = _builder.getPreludeSource()
      @JvmName("setPreludeSource")
      set(value) {
        _builder.setPreludeSource(value)
      }
    /**
     * `.google.protobuf.Empty prelude_source = 2;`
     */
    public fun clearPreludeSource() {
      _builder.clearPreludeSource()
    }
    /**
     * `.google.protobuf.Empty prelude_source = 2;`
     * @return Whether the preludeSource field is set.
     */
    public fun hasPreludeSource(): kotlin.Boolean {
      return _builder.hasPreludeSource()
    }

    /**
     * `.google.protobuf.Empty main_source = 3;`
     */
    public var mainSource: com.google.protobuf.Empty
      @JvmName("getMainSource")
      get() = _builder.getMainSource()
      @JvmName("setMainSource")
      set(value) {
        _builder.setMainSource(value)
      }
    /**
     * `.google.protobuf.Empty main_source = 3;`
     */
    public fun clearMainSource() {
      _builder.clearMainSource()
    }
    /**
     * `.google.protobuf.Empty main_source = 3;`
     * @return Whether the mainSource field is set.
     */
    public fun hasMainSource(): kotlin.Boolean {
      return _builder.hasMainSource()
    }

    /**
     * `string preloaded_plugin = 4;`
     */
    public var preloadedPlugin: kotlin.String
      @JvmName("getPreloadedPlugin")
      get() = _builder.getPreloadedPlugin()
      @JvmName("setPreloadedPlugin")
      set(value) {
        _builder.setPreloadedPlugin(value)
      }
    /**
     * `string preloaded_plugin = 4;`
     */
    public fun clearPreloadedPlugin() {
      _builder.clearPreloadedPlugin()
    }
    /**
     * `string preloaded_plugin = 4;`
     * @return Whether the preloadedPlugin field is set.
     */
    public fun hasPreloadedPlugin(): kotlin.Boolean {
      return _builder.hasPreloadedPlugin()
    }

    /**
     * `.com.giyeok.bibix.ExternalBibixProject external_plugin_objhash = 5;`
     */
    public var externalPluginObjhash: com.giyeok.bibix.BibixIdProto.ExternalBibixProject
      @JvmName("getExternalPluginObjhash")
      get() = _builder.getExternalPluginObjhash()
      @JvmName("setExternalPluginObjhash")
      set(value) {
        _builder.setExternalPluginObjhash(value)
      }
    /**
     * `.com.giyeok.bibix.ExternalBibixProject external_plugin_objhash = 5;`
     */
    public fun clearExternalPluginObjhash() {
      _builder.clearExternalPluginObjhash()
    }
    /**
     * `.com.giyeok.bibix.ExternalBibixProject external_plugin_objhash = 5;`
     * @return Whether the externalPluginObjhash field is set.
     */
    public fun hasExternalPluginObjhash(): kotlin.Boolean {
      return _builder.hasExternalPluginObjhash()
    }
    public val sourceCase: com.giyeok.bibix.BibixIdProto.SourceId.SourceCase
      @JvmName("getSourceCase")
      get() = _builder.getSourceCase()

    public fun clearSource() {
      _builder.clearSource()
    }
  }
}
@kotlin.jvm.JvmSynthetic
@com.google.errorprone.annotations.CheckReturnValue
public inline fun com.giyeok.bibix.BibixIdProto.SourceId.copy(block: com.giyeok.bibix.SourceIdKt.Dsl.() -> kotlin.Unit): com.giyeok.bibix.BibixIdProto.SourceId =
  com.giyeok.bibix.SourceIdKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val com.giyeok.bibix.BibixIdProto.SourceIdOrBuilder.preludeSourceOrNull: com.google.protobuf.Empty?
  get() = if (hasPreludeSource()) getPreludeSource() else null

public val com.giyeok.bibix.BibixIdProto.SourceIdOrBuilder.mainSourceOrNull: com.google.protobuf.Empty?
  get() = if (hasMainSource()) getMainSource() else null

public val com.giyeok.bibix.BibixIdProto.SourceIdOrBuilder.externalPluginObjhashOrNull: com.giyeok.bibix.BibixIdProto.ExternalBibixProject?
  get() = if (hasExternalPluginObjhash()) getExternalPluginObjhash() else null

