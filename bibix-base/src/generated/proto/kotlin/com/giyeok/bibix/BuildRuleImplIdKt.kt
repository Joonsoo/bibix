// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: ids.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.giyeok.bibix;

@kotlin.jvm.JvmName("-initializebuildRuleImplId")
public inline fun buildRuleImplId(block: com.giyeok.bibix.BuildRuleImplIdKt.Dsl.() -> kotlin.Unit): com.giyeok.bibix.BibixIdProto.BuildRuleImplId =
  com.giyeok.bibix.BuildRuleImplIdKt.Dsl._create(com.giyeok.bibix.BibixIdProto.BuildRuleImplId.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `com.giyeok.bibix.BuildRuleImplId`
 */
public object BuildRuleImplIdKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.giyeok.bibix.BibixIdProto.BuildRuleImplId.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.giyeok.bibix.BibixIdProto.BuildRuleImplId.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.giyeok.bibix.BibixIdProto.BuildRuleImplId = _builder.build()

    /**
     * `.com.giyeok.bibix.SourceId source_id = 1;`
     */
    public var sourceId: com.giyeok.bibix.BibixIdProto.SourceId
      @JvmName("getSourceId")
      get() = _builder.getSourceId()
      @JvmName("setSourceId")
      set(value) {
        _builder.setSourceId(value)
      }
    /**
     * `.com.giyeok.bibix.SourceId source_id = 1;`
     */
    public fun clearSourceId() {
      _builder.clearSourceId()
    }
    /**
     * `.com.giyeok.bibix.SourceId source_id = 1;`
     * @return Whether the sourceId field is set.
     */
    public fun hasSourceId(): kotlin.Boolean {
      return _builder.hasSourceId()
    }

    /**
     * `bytes target_id = 2;`
     */
    public var targetId: com.google.protobuf.ByteString
      @JvmName("getTargetId")
      get() = _builder.getTargetId()
      @JvmName("setTargetId")
      set(value) {
        _builder.setTargetId(value)
      }
    /**
     * `bytes target_id = 2;`
     */
    public fun clearTargetId() {
      _builder.clearTargetId()
    }

    /**
     * `bytes object_id = 3;`
     */
    public var objectId: com.google.protobuf.ByteString
      @JvmName("getObjectId")
      get() = _builder.getObjectId()
      @JvmName("setObjectId")
      set(value) {
        _builder.setObjectId(value)
      }
    /**
     * `bytes object_id = 3;`
     */
    public fun clearObjectId() {
      _builder.clearObjectId()
    }
  }
}
@kotlin.jvm.JvmSynthetic
@com.google.errorprone.annotations.CheckReturnValue
public inline fun com.giyeok.bibix.BibixIdProto.BuildRuleImplId.copy(block: com.giyeok.bibix.BuildRuleImplIdKt.Dsl.() -> kotlin.Unit): com.giyeok.bibix.BibixIdProto.BuildRuleImplId =
  com.giyeok.bibix.BuildRuleImplIdKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val com.giyeok.bibix.BibixIdProto.BuildRuleImplIdOrBuilder.sourceIdOrNull: com.giyeok.bibix.BibixIdProto.SourceId?
  get() = if (hasSourceId()) getSourceId() else null

