//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: ids.proto

package com.giyeok.bibix;

@kotlin.jvm.JvmSynthetic
public inline fun remoteSourceId(block: com.giyeok.bibix.RemoteSourceIdKt.Dsl.() -> kotlin.Unit): com.giyeok.bibix.BibixIdProto.RemoteSourceId =
  com.giyeok.bibix.RemoteSourceIdKt.Dsl._create(com.giyeok.bibix.BibixIdProto.RemoteSourceId.newBuilder()).apply { block() }._build()
public object RemoteSourceIdKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.giyeok.bibix.BibixIdProto.RemoteSourceId.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.giyeok.bibix.BibixIdProto.RemoteSourceId.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.giyeok.bibix.BibixIdProto.RemoteSourceId = _builder.build()

    /**
     * <code>string source_type = 1;</code>
     */
    public var sourceType: kotlin.String
      @JvmName("getSourceType")
      get() = _builder.getSourceType()
      @JvmName("setSourceType")
      set(value) {
        _builder.setSourceType(value)
      }
    /**
     * <code>string source_type = 1;</code>
     */
    public fun clearSourceType() {
      _builder.clearSourceType()
    }

    /**
     * <code>.com.giyeok.bibix.BibixValue source_spec = 2;</code>
     */
    public var sourceSpec: com.giyeok.bibix.BibixValueProto.BibixValue
      @JvmName("getSourceSpec")
      get() = _builder.getSourceSpec()
      @JvmName("setSourceSpec")
      set(value) {
        _builder.setSourceSpec(value)
      }
    /**
     * <code>.com.giyeok.bibix.BibixValue source_spec = 2;</code>
     */
    public fun clearSourceSpec() {
      _builder.clearSourceSpec()
    }
    /**
     * <code>.com.giyeok.bibix.BibixValue source_spec = 2;</code>
     * @return Whether the sourceSpec field is set.
     */
    public fun hasSourceSpec(): kotlin.Boolean {
      return _builder.hasSourceSpec()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.giyeok.bibix.BibixIdProto.RemoteSourceId.copy(block: com.giyeok.bibix.RemoteSourceIdKt.Dsl.() -> kotlin.Unit): com.giyeok.bibix.BibixIdProto.RemoteSourceId =
  com.giyeok.bibix.RemoteSourceIdKt.Dsl._create(this.toBuilder()).apply { block() }._build()
