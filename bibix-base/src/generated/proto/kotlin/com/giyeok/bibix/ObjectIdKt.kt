//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: ids.proto

package com.giyeok.bibix;

@kotlin.jvm.JvmSynthetic
public inline fun objectId(block: com.giyeok.bibix.ObjectIdKt.Dsl.() -> kotlin.Unit): com.giyeok.bibix.BibixIdProto.ObjectId =
  com.giyeok.bibix.ObjectIdKt.Dsl._create(com.giyeok.bibix.BibixIdProto.ObjectId.newBuilder()).apply { block() }._build()
public object ObjectIdKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.giyeok.bibix.BibixIdProto.ObjectId.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.giyeok.bibix.BibixIdProto.ObjectId.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.giyeok.bibix.BibixIdProto.ObjectId = _builder.build()

    /**
     * <code>.com.giyeok.bibix.SourceId source_id = 1;</code>
     */
    public var sourceId: com.giyeok.bibix.BibixIdProto.SourceId
      @JvmName("getSourceId")
      get() = _builder.getSourceId()
      @JvmName("setSourceId")
      set(value) {
        _builder.setSourceId(value)
      }
    /**
     * <code>.com.giyeok.bibix.SourceId source_id = 1;</code>
     */
    public fun clearSourceId() {
      _builder.clearSourceId()
    }
    /**
     * <code>.com.giyeok.bibix.SourceId source_id = 1;</code>
     * @return Whether the sourceId field is set.
     */
    public fun hasSourceId(): kotlin.Boolean {
      return _builder.hasSourceId()
    }

    /**
     * <code>.com.giyeok.bibix.ObjectIdHash rule_impl_id_hash = 2;</code>
     */
    public var ruleImplIdHash: com.giyeok.bibix.BibixIdProto.ObjectIdHash
      @JvmName("getRuleImplIdHash")
      get() = _builder.getRuleImplIdHash()
      @JvmName("setRuleImplIdHash")
      set(value) {
        _builder.setRuleImplIdHash(value)
      }
    /**
     * <code>.com.giyeok.bibix.ObjectIdHash rule_impl_id_hash = 2;</code>
     */
    public fun clearRuleImplIdHash() {
      _builder.clearRuleImplIdHash()
    }
    /**
     * <code>.com.giyeok.bibix.ObjectIdHash rule_impl_id_hash = 2;</code>
     * @return Whether the ruleImplIdHash field is set.
     */
    public fun hasRuleImplIdHash(): kotlin.Boolean {
      return _builder.hasRuleImplIdHash()
    }

    /**
     * <pre>
     * rule impl의 구현 코드가 바뀐 경우. rule_impl_id_hash는 argument가 바뀐 경우에만 변경되기 때문에 필요
     * </pre>
     *
     * <code>.com.giyeok.bibix.SourceHashId rule_impl_source_hash = 3;</code>
     */
    public var ruleImplSourceHash: com.giyeok.bibix.BibixIdProto.SourceHashId
      @JvmName("getRuleImplSourceHash")
      get() = _builder.getRuleImplSourceHash()
      @JvmName("setRuleImplSourceHash")
      set(value) {
        _builder.setRuleImplSourceHash(value)
      }
    /**
     * <pre>
     * rule impl의 구현 코드가 바뀐 경우. rule_impl_id_hash는 argument가 바뀐 경우에만 변경되기 때문에 필요
     * </pre>
     *
     * <code>.com.giyeok.bibix.SourceHashId rule_impl_source_hash = 3;</code>
     */
    public fun clearRuleImplSourceHash() {
      _builder.clearRuleImplSourceHash()
    }
    /**
     * <pre>
     * rule impl의 구현 코드가 바뀐 경우. rule_impl_id_hash는 argument가 바뀐 경우에만 변경되기 때문에 필요
     * </pre>
     *
     * <code>.com.giyeok.bibix.SourceHashId rule_impl_source_hash = 3;</code>
     * @return Whether the ruleImplSourceHash field is set.
     */
    public fun hasRuleImplSourceHash(): kotlin.Boolean {
      return _builder.hasRuleImplSourceHash()
    }

    /**
     * <code>string method_name = 4;</code>
     */
    public var methodName: kotlin.String
      @JvmName("getMethodName")
      get() = _builder.getMethodName()
      @JvmName("setMethodName")
      set(value) {
        _builder.setMethodName(value)
      }
    /**
     * <code>string method_name = 4;</code>
     */
    public fun clearMethodName() {
      _builder.clearMethodName()
    }

    /**
     * <code>.com.giyeok.bibix.ArgsMap args_map = 5;</code>
     */
    public var argsMap: com.giyeok.bibix.BibixIdProto.ArgsMap
      @JvmName("getArgsMap")
      get() = _builder.getArgsMap()
      @JvmName("setArgsMap")
      set(value) {
        _builder.setArgsMap(value)
      }
    /**
     * <code>.com.giyeok.bibix.ArgsMap args_map = 5;</code>
     */
    public fun clearArgsMap() {
      _builder.clearArgsMap()
    }
    /**
     * <code>.com.giyeok.bibix.ArgsMap args_map = 5;</code>
     * @return Whether the argsMap field is set.
     */
    public fun hasArgsMap(): kotlin.Boolean {
      return _builder.hasArgsMap()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.giyeok.bibix.BibixIdProto.ObjectId.copy(block: com.giyeok.bibix.ObjectIdKt.Dsl.() -> kotlin.Unit): com.giyeok.bibix.BibixIdProto.ObjectId =
  com.giyeok.bibix.ObjectIdKt.Dsl._create(this.toBuilder()).apply { block() }._build()
