//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: ids.proto

package com.giyeok.bibix;

@kotlin.jvm.JvmSynthetic
public inline fun objectId(block: com.giyeok.bibix.ObjectIdKt.Dsl.() -> kotlin.Unit): com.giyeok.bibix.BibixIdProto.ObjectId =
  com.giyeok.bibix.ObjectIdKt.Dsl._create(com.giyeok.bibix.BibixIdProto.ObjectId.newBuilder()).apply { block() }._build()
public object ObjectIdKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.giyeok.bibix.BibixIdProto.ObjectId.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.giyeok.bibix.BibixIdProto.ObjectId.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.giyeok.bibix.BibixIdProto.ObjectId = _builder.build()

    /**
     * <pre>
     * caller expression의 위치
     * </pre>
     *
     * <code>.com.giyeok.bibix.SourceId calling_source_id = 1;</code>
     */
    public var callingSourceId: com.giyeok.bibix.BibixIdProto.SourceId
      @JvmName("getCallingSourceId")
      get() = _builder.getCallingSourceId()
      @JvmName("setCallingSourceId")
      set(value) {
        _builder.setCallingSourceId(value)
      }
    /**
     * <pre>
     * caller expression의 위치
     * </pre>
     *
     * <code>.com.giyeok.bibix.SourceId calling_source_id = 1;</code>
     */
    public fun clearCallingSourceId() {
      _builder.clearCallingSourceId()
    }
    /**
     * <pre>
     * caller expression의 위치
     * </pre>
     *
     * <code>.com.giyeok.bibix.SourceId calling_source_id = 1;</code>
     * @return Whether the callingSourceId field is set.
     */
    public fun hasCallingSourceId(): kotlin.Boolean {
      return _builder.hasCallingSourceId()
    }

    /**
     * <pre>
     * rule이 preloaded plugin에서 정의된 경우, bibix 버젼
     * </pre>
     *
     * <code>string bibix_version = 2;</code>
     */
    public var bibixVersion: kotlin.String
      @JvmName("getBibixVersion")
      get() = _builder.getBibixVersion()
      @JvmName("setBibixVersion")
      set(value) {
        _builder.setBibixVersion(value)
      }
    /**
     * <pre>
     * rule이 preloaded plugin에서 정의된 경우, bibix 버젼
     * </pre>
     *
     * <code>string bibix_version = 2;</code>
     */
    public fun clearBibixVersion() {
      _builder.clearBibixVersion()
    }
    /**
     * <pre>
     * rule이 preloaded plugin에서 정의된 경우, bibix 버젼
     * </pre>
     *
     * <code>string bibix_version = 2;</code>
     * @return Whether the bibixVersion field is set.
     */
    public fun hasBibixVersion(): kotlin.Boolean {
      return _builder.hasBibixVersion()
    }

    /**
     * <pre>
     * 그 외의 경우(rule이 메인 스크립트에서 정의되었거나 extern source에서 정의된 경우), ClassPaths 인스턴스의 sha1 해시
     * </pre>
     *
     * <code>bytes rule_impl_objhash = 3;</code>
     */
    public var ruleImplObjhash: com.google.protobuf.ByteString
      @JvmName("getRuleImplObjhash")
      get() = _builder.getRuleImplObjhash()
      @JvmName("setRuleImplObjhash")
      set(value) {
        _builder.setRuleImplObjhash(value)
      }
    /**
     * <pre>
     * 그 외의 경우(rule이 메인 스크립트에서 정의되었거나 extern source에서 정의된 경우), ClassPaths 인스턴스의 sha1 해시
     * </pre>
     *
     * <code>bytes rule_impl_objhash = 3;</code>
     */
    public fun clearRuleImplObjhash() {
      _builder.clearRuleImplObjhash()
    }
    /**
     * <pre>
     * 그 외의 경우(rule이 메인 스크립트에서 정의되었거나 extern source에서 정의된 경우), ClassPaths 인스턴스의 sha1 해시
     * </pre>
     *
     * <code>bytes rule_impl_objhash = 3;</code>
     * @return Whether the ruleImplObjhash field is set.
     */
    public fun hasRuleImplObjhash(): kotlin.Boolean {
      return _builder.hasRuleImplObjhash()
    }

    /**
     * <code>.com.giyeok.bibix.SourceId rule_source_id = 4;</code>
     */
    public var ruleSourceId: com.giyeok.bibix.BibixIdProto.SourceId
      @JvmName("getRuleSourceId")
      get() = _builder.getRuleSourceId()
      @JvmName("setRuleSourceId")
      set(value) {
        _builder.setRuleSourceId(value)
      }
    /**
     * <code>.com.giyeok.bibix.SourceId rule_source_id = 4;</code>
     */
    public fun clearRuleSourceId() {
      _builder.clearRuleSourceId()
    }
    /**
     * <code>.com.giyeok.bibix.SourceId rule_source_id = 4;</code>
     * @return Whether the ruleSourceId field is set.
     */
    public fun hasRuleSourceId(): kotlin.Boolean {
      return _builder.hasRuleSourceId()
    }

    /**
     * <code>string rule_name = 5;</code>
     */
    public var ruleName: kotlin.String
      @JvmName("getRuleName")
      get() = _builder.getRuleName()
      @JvmName("setRuleName")
      set(value) {
        _builder.setRuleName(value)
      }
    /**
     * <code>string rule_name = 5;</code>
     */
    public fun clearRuleName() {
      _builder.clearRuleName()
    }

    /**
     * <code>string class_name = 6;</code>
     */
    public var className: kotlin.String
      @JvmName("getClassName")
      get() = _builder.getClassName()
      @JvmName("setClassName")
      set(value) {
        _builder.setClassName(value)
      }
    /**
     * <code>string class_name = 6;</code>
     */
    public fun clearClassName() {
      _builder.clearClassName()
    }

    /**
     * <code>string method_name = 7;</code>
     */
    public var methodName: kotlin.String
      @JvmName("getMethodName")
      get() = _builder.getMethodName()
      @JvmName("setMethodName")
      set(value) {
        _builder.setMethodName(value)
      }
    /**
     * <code>string method_name = 7;</code>
     */
    public fun clearMethodName() {
      _builder.clearMethodName()
    }

    /**
     * <code>.com.giyeok.bibix.ArgsMap args_map = 8;</code>
     */
    public var argsMap: com.giyeok.bibix.BibixIdProto.ArgsMap
      @JvmName("getArgsMap")
      get() = _builder.getArgsMap()
      @JvmName("setArgsMap")
      set(value) {
        _builder.setArgsMap(value)
      }
    /**
     * <code>.com.giyeok.bibix.ArgsMap args_map = 8;</code>
     */
    public fun clearArgsMap() {
      _builder.clearArgsMap()
    }
    /**
     * <code>.com.giyeok.bibix.ArgsMap args_map = 8;</code>
     * @return Whether the argsMap field is set.
     */
    public fun hasArgsMap(): kotlin.Boolean {
      return _builder.hasArgsMap()
    }
    public val ruleSourceCase: com.giyeok.bibix.BibixIdProto.ObjectId.RuleSourceCase
      @JvmName("getRuleSourceCase")
      get() = _builder.getRuleSourceCase()

    public fun clearRuleSource() {
      _builder.clearRuleSource()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.giyeok.bibix.BibixIdProto.ObjectId.copy(block: com.giyeok.bibix.ObjectIdKt.Dsl.() -> kotlin.Unit): com.giyeok.bibix.BibixIdProto.ObjectId =
  com.giyeok.bibix.ObjectIdKt.Dsl._create(this.toBuilder()).apply { block() }._build()
