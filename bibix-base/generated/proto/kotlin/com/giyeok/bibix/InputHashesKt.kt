// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: ids.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.giyeok.bibix;

@kotlin.jvm.JvmName("-initializeinputHashes")
public inline fun inputHashes(block: com.giyeok.bibix.InputHashesKt.Dsl.() -> kotlin.Unit): com.giyeok.bibix.BibixIdProto.InputHashes =
  com.giyeok.bibix.InputHashesKt.Dsl._create(com.giyeok.bibix.BibixIdProto.InputHashes.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `com.giyeok.bibix.InputHashes`
 */
public object InputHashesKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.giyeok.bibix.BibixIdProto.InputHashes.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.giyeok.bibix.BibixIdProto.InputHashes.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.giyeok.bibix.BibixIdProto.InputHashes = _builder.build()

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class DirectoriesProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * `repeated .com.giyeok.bibix.DirectoryHash directories = 1;`
     */
     public val directories: com.google.protobuf.kotlin.DslList<com.giyeok.bibix.BibixIdProto.DirectoryHash, DirectoriesProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getDirectoriesList()
      )
    /**
     * `repeated .com.giyeok.bibix.DirectoryHash directories = 1;`
     * @param value The directories to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addDirectories")
    public fun com.google.protobuf.kotlin.DslList<com.giyeok.bibix.BibixIdProto.DirectoryHash, DirectoriesProxy>.add(value: com.giyeok.bibix.BibixIdProto.DirectoryHash) {
      _builder.addDirectories(value)
    }
    /**
     * `repeated .com.giyeok.bibix.DirectoryHash directories = 1;`
     * @param value The directories to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignDirectories")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<com.giyeok.bibix.BibixIdProto.DirectoryHash, DirectoriesProxy>.plusAssign(value: com.giyeok.bibix.BibixIdProto.DirectoryHash) {
      add(value)
    }
    /**
     * `repeated .com.giyeok.bibix.DirectoryHash directories = 1;`
     * @param values The directories to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllDirectories")
    public fun com.google.protobuf.kotlin.DslList<com.giyeok.bibix.BibixIdProto.DirectoryHash, DirectoriesProxy>.addAll(values: kotlin.collections.Iterable<com.giyeok.bibix.BibixIdProto.DirectoryHash>) {
      _builder.addAllDirectories(values)
    }
    /**
     * `repeated .com.giyeok.bibix.DirectoryHash directories = 1;`
     * @param values The directories to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllDirectories")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<com.giyeok.bibix.BibixIdProto.DirectoryHash, DirectoriesProxy>.plusAssign(values: kotlin.collections.Iterable<com.giyeok.bibix.BibixIdProto.DirectoryHash>) {
      addAll(values)
    }
    /**
     * `repeated .com.giyeok.bibix.DirectoryHash directories = 1;`
     * @param index The index to set the value at.
     * @param value The directories to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setDirectories")
    public operator fun com.google.protobuf.kotlin.DslList<com.giyeok.bibix.BibixIdProto.DirectoryHash, DirectoriesProxy>.set(index: kotlin.Int, value: com.giyeok.bibix.BibixIdProto.DirectoryHash) {
      _builder.setDirectories(index, value)
    }
    /**
     * `repeated .com.giyeok.bibix.DirectoryHash directories = 1;`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearDirectories")
    public fun com.google.protobuf.kotlin.DslList<com.giyeok.bibix.BibixIdProto.DirectoryHash, DirectoriesProxy>.clear() {
      _builder.clearDirectories()
    }


    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class FilesProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * `repeated .com.giyeok.bibix.FileHash files = 2;`
     */
     public val files: com.google.protobuf.kotlin.DslList<com.giyeok.bibix.BibixIdProto.FileHash, FilesProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getFilesList()
      )
    /**
     * `repeated .com.giyeok.bibix.FileHash files = 2;`
     * @param value The files to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addFiles")
    public fun com.google.protobuf.kotlin.DslList<com.giyeok.bibix.BibixIdProto.FileHash, FilesProxy>.add(value: com.giyeok.bibix.BibixIdProto.FileHash) {
      _builder.addFiles(value)
    }
    /**
     * `repeated .com.giyeok.bibix.FileHash files = 2;`
     * @param value The files to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignFiles")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<com.giyeok.bibix.BibixIdProto.FileHash, FilesProxy>.plusAssign(value: com.giyeok.bibix.BibixIdProto.FileHash) {
      add(value)
    }
    /**
     * `repeated .com.giyeok.bibix.FileHash files = 2;`
     * @param values The files to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllFiles")
    public fun com.google.protobuf.kotlin.DslList<com.giyeok.bibix.BibixIdProto.FileHash, FilesProxy>.addAll(values: kotlin.collections.Iterable<com.giyeok.bibix.BibixIdProto.FileHash>) {
      _builder.addAllFiles(values)
    }
    /**
     * `repeated .com.giyeok.bibix.FileHash files = 2;`
     * @param values The files to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllFiles")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<com.giyeok.bibix.BibixIdProto.FileHash, FilesProxy>.plusAssign(values: kotlin.collections.Iterable<com.giyeok.bibix.BibixIdProto.FileHash>) {
      addAll(values)
    }
    /**
     * `repeated .com.giyeok.bibix.FileHash files = 2;`
     * @param index The index to set the value at.
     * @param value The files to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setFiles")
    public operator fun com.google.protobuf.kotlin.DslList<com.giyeok.bibix.BibixIdProto.FileHash, FilesProxy>.set(index: kotlin.Int, value: com.giyeok.bibix.BibixIdProto.FileHash) {
      _builder.setFiles(index, value)
    }
    /**
     * `repeated .com.giyeok.bibix.FileHash files = 2;`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearFiles")
    public fun com.google.protobuf.kotlin.DslList<com.giyeok.bibix.BibixIdProto.FileHash, FilesProxy>.clear() {
      _builder.clearFiles()
    }


    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class NonExistentProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * `repeated string non_existent = 3;`
     * @return A list containing the nonExistent.
     */
    public val nonExistent: com.google.protobuf.kotlin.DslList<kotlin.String, NonExistentProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getNonExistentList()
      )
    /**
     * `repeated string non_existent = 3;`
     * @param value The nonExistent to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addNonExistent")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, NonExistentProxy>.add(value: kotlin.String) {
      _builder.addNonExistent(value)
    }
    /**
     * `repeated string non_existent = 3;`
     * @param value The nonExistent to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignNonExistent")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, NonExistentProxy>.plusAssign(value: kotlin.String) {
      add(value)
    }
    /**
     * `repeated string non_existent = 3;`
     * @param values The nonExistent to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllNonExistent")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, NonExistentProxy>.addAll(values: kotlin.collections.Iterable<kotlin.String>) {
      _builder.addAllNonExistent(values)
    }
    /**
     * `repeated string non_existent = 3;`
     * @param values The nonExistent to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllNonExistent")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, NonExistentProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.String>) {
      addAll(values)
    }
    /**
     * `repeated string non_existent = 3;`
     * @param index The index to set the value at.
     * @param value The nonExistent to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setNonExistent")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.String, NonExistentProxy>.set(index: kotlin.Int, value: kotlin.String) {
      _builder.setNonExistent(index, value)
    }/**
     * `repeated string non_existent = 3;`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearNonExistent")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, NonExistentProxy>.clear() {
      _builder.clearNonExistent()
    }}
}
@kotlin.jvm.JvmSynthetic
@com.google.errorprone.annotations.CheckReturnValue
public inline fun com.giyeok.bibix.BibixIdProto.InputHashes.copy(block: com.giyeok.bibix.InputHashesKt.Dsl.() -> kotlin.Unit): com.giyeok.bibix.BibixIdProto.InputHashes =
  com.giyeok.bibix.InputHashesKt.Dsl._create(this.toBuilder()).apply { block() }._build()

