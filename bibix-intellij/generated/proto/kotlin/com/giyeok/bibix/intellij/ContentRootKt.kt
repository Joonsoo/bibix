// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: api.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.giyeok.bibix.intellij;

@kotlin.jvm.JvmName("-initializecontentRoot")
public inline fun contentRoot(block: com.giyeok.bibix.intellij.ContentRootKt.Dsl.() -> kotlin.Unit): com.giyeok.bibix.intellij.BibixIntellijProto.ContentRoot =
  com.giyeok.bibix.intellij.ContentRootKt.Dsl._create(com.giyeok.bibix.intellij.BibixIntellijProto.ContentRoot.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `com.giyeok.bibix.intellij.ContentRoot`
 */
public object ContentRootKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.giyeok.bibix.intellij.BibixIntellijProto.ContentRoot.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.giyeok.bibix.intellij.BibixIntellijProto.ContentRoot.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.giyeok.bibix.intellij.BibixIntellijProto.ContentRoot = _builder.build()

    /**
     * `string content_root_name = 1;`
     */
    public var contentRootName: kotlin.String
      @JvmName("getContentRootName")
      get() = _builder.getContentRootName()
      @JvmName("setContentRootName")
      set(value) {
        _builder.setContentRootName(value)
      }
    /**
     * `string content_root_name = 1;`
     */
    public fun clearContentRootName() {
      _builder.clearContentRootName()
    }

    /**
     * `string content_root_type = 2;`
     */
    public var contentRootType: kotlin.String
      @JvmName("getContentRootType")
      get() = _builder.getContentRootType()
      @JvmName("setContentRootType")
      set(value) {
        _builder.setContentRootType(value)
      }
    /**
     * `string content_root_type = 2;`
     */
    public fun clearContentRootType() {
      _builder.clearContentRootType()
    }

    /**
     * `string content_root_path = 3;`
     */
    public var contentRootPath: kotlin.String
      @JvmName("getContentRootPath")
      get() = _builder.getContentRootPath()
      @JvmName("setContentRootPath")
      set(value) {
        _builder.setContentRootPath(value)
      }
    /**
     * `string content_root_path = 3;`
     */
    public fun clearContentRootPath() {
      _builder.clearContentRootPath()
    }
  }
}
@kotlin.jvm.JvmSynthetic
@com.google.errorprone.annotations.CheckReturnValue
public inline fun com.giyeok.bibix.intellij.BibixIntellijProto.ContentRoot.copy(block: com.giyeok.bibix.intellij.ContentRootKt.Dsl.() -> kotlin.Unit): com.giyeok.bibix.intellij.BibixIntellijProto.ContentRoot =
  com.giyeok.bibix.intellij.ContentRootKt.Dsl._create(this.toBuilder()).apply { block() }._build()

