// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: api.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.giyeok.bibix.intellij;

@kotlin.jvm.JvmName("-initializeloadProjectReq")
public inline fun loadProjectReq(block: com.giyeok.bibix.intellij.LoadProjectReqKt.Dsl.() -> kotlin.Unit): com.giyeok.bibix.intellij.BibixIntellijProto.LoadProjectReq =
  com.giyeok.bibix.intellij.LoadProjectReqKt.Dsl._create(com.giyeok.bibix.intellij.BibixIntellijProto.LoadProjectReq.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `com.giyeok.bibix.intellij.LoadProjectReq`
 */
public object LoadProjectReqKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.giyeok.bibix.intellij.BibixIntellijProto.LoadProjectReq.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.giyeok.bibix.intellij.BibixIntellijProto.LoadProjectReq.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.giyeok.bibix.intellij.BibixIntellijProto.LoadProjectReq = _builder.build()

    /**
     * `string project_root = 1;`
     */
    public var projectRoot: kotlin.String
      @JvmName("getProjectRoot")
      get() = _builder.getProjectRoot()
      @JvmName("setProjectRoot")
      set(value) {
        _builder.setProjectRoot(value)
      }
    /**
     * `string project_root = 1;`
     */
    public fun clearProjectRoot() {
      _builder.clearProjectRoot()
    }

    /**
     * `string script_name = 2;`
     */
    public var scriptName: kotlin.String
      @JvmName("getScriptName")
      get() = _builder.getScriptName()
      @JvmName("setScriptName")
      set(value) {
        _builder.setScriptName(value)
      }
    /**
     * `string script_name = 2;`
     */
    public fun clearScriptName() {
      _builder.clearScriptName()
    }

    /**
     * `bool force_reload = 3;`
     */
    public var forceReload: kotlin.Boolean
      @JvmName("getForceReload")
      get() = _builder.getForceReload()
      @JvmName("setForceReload")
      set(value) {
        _builder.setForceReload(value)
      }
    /**
     * `bool force_reload = 3;`
     */
    public fun clearForceReload() {
      _builder.clearForceReload()
    }
  }
}
@kotlin.jvm.JvmSynthetic
@com.google.errorprone.annotations.CheckReturnValue
public inline fun com.giyeok.bibix.intellij.BibixIntellijProto.LoadProjectReq.copy(block: com.giyeok.bibix.intellij.LoadProjectReqKt.Dsl.() -> kotlin.Unit): com.giyeok.bibix.intellij.BibixIntellijProto.LoadProjectReq =
  com.giyeok.bibix.intellij.LoadProjectReqKt.Dsl._create(this.toBuilder()).apply { block() }._build()

