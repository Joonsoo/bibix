//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: api.proto

package com.giyeok.bibix.intellij;

@kotlin.jvm.JvmName("-initializeexecuteActionsRes")
inline fun executeActionsRes(block: com.giyeok.bibix.intellij.ExecuteActionsResKt.Dsl.() -> kotlin.Unit): com.giyeok.bibix.intellij.BibixIntellijProto.ExecuteActionsRes =
  com.giyeok.bibix.intellij.ExecuteActionsResKt.Dsl._create(com.giyeok.bibix.intellij.BibixIntellijProto.ExecuteActionsRes.newBuilder()).apply { block() }._build()
object ExecuteActionsResKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    private val _builder: com.giyeok.bibix.intellij.BibixIntellijProto.ExecuteActionsRes.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.giyeok.bibix.intellij.BibixIntellijProto.ExecuteActionsRes.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.giyeok.bibix.intellij.BibixIntellijProto.ExecuteActionsRes = _builder.build()
  }
}
@kotlin.jvm.JvmSynthetic
inline fun com.giyeok.bibix.intellij.BibixIntellijProto.ExecuteActionsRes.copy(block: com.giyeok.bibix.intellij.ExecuteActionsResKt.Dsl.() -> kotlin.Unit): com.giyeok.bibix.intellij.BibixIntellijProto.ExecuteActionsRes =
  com.giyeok.bibix.intellij.ExecuteActionsResKt.Dsl._create(this.toBuilder()).apply { block() }._build()

