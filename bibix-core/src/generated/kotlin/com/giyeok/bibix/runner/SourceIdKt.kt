//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: ids.proto

package com.giyeok.bibix.runner;

@kotlin.jvm.JvmName("-initializesourceId")
public inline fun sourceId(block: com.giyeok.bibix.runner.SourceIdKt.Dsl.() -> kotlin.Unit): com.giyeok.bibix.runner.BibixIdProto.SourceId =
  com.giyeok.bibix.runner.SourceIdKt.Dsl._create(com.giyeok.bibix.runner.BibixIdProto.SourceId.newBuilder()).apply { block() }._build()
public object SourceIdKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.giyeok.bibix.runner.BibixIdProto.SourceId.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.giyeok.bibix.runner.BibixIdProto.SourceId.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.giyeok.bibix.runner.BibixIdProto.SourceId = _builder.build()

    /**
     * <code>.google.protobuf.Empty root_source = 1;</code>
     */
    public var rootSource: com.google.protobuf.Empty
      @JvmName("getRootSource")
      get() = _builder.getRootSource()
      @JvmName("setRootSource")
      set(value) {
        _builder.setRootSource(value)
      }
    /**
     * <code>.google.protobuf.Empty root_source = 1;</code>
     */
    public fun clearRootSource() {
      _builder.clearRootSource()
    }
    /**
     * <code>.google.protobuf.Empty root_source = 1;</code>
     * @return Whether the rootSource field is set.
     */
    public fun hasRootSource(): kotlin.Boolean {
      return _builder.hasRootSource()
    }

    /**
     * <code>.google.protobuf.Empty main_source = 2;</code>
     */
    public var mainSource: com.google.protobuf.Empty
      @JvmName("getMainSource")
      get() = _builder.getMainSource()
      @JvmName("setMainSource")
      set(value) {
        _builder.setMainSource(value)
      }
    /**
     * <code>.google.protobuf.Empty main_source = 2;</code>
     */
    public fun clearMainSource() {
      _builder.clearMainSource()
    }
    /**
     * <code>.google.protobuf.Empty main_source = 2;</code>
     * @return Whether the mainSource field is set.
     */
    public fun hasMainSource(): kotlin.Boolean {
      return _builder.hasMainSource()
    }

    /**
     * <code>string bibix_internal_source = 3;</code>
     */
    public var bibixInternalSource: kotlin.String
      @JvmName("getBibixInternalSource")
      get() = _builder.getBibixInternalSource()
      @JvmName("setBibixInternalSource")
      set(value) {
        _builder.setBibixInternalSource(value)
      }
    /**
     * <code>string bibix_internal_source = 3;</code>
     */
    public fun clearBibixInternalSource() {
      _builder.clearBibixInternalSource()
    }
    /**
     * <code>string bibix_internal_source = 3;</code>
     * @return Whether the bibixInternalSource field is set.
     */
    public fun hasBibixInternalSource(): kotlin.Boolean {
      return _builder.hasBibixInternalSource()
    }

    /**
     * <code>string local_source = 4;</code>
     */
    public var localSource: kotlin.String
      @JvmName("getLocalSource")
      get() = _builder.getLocalSource()
      @JvmName("setLocalSource")
      set(value) {
        _builder.setLocalSource(value)
      }
    /**
     * <code>string local_source = 4;</code>
     */
    public fun clearLocalSource() {
      _builder.clearLocalSource()
    }
    /**
     * <code>string local_source = 4;</code>
     * @return Whether the localSource field is set.
     */
    public fun hasLocalSource(): kotlin.Boolean {
      return _builder.hasLocalSource()
    }

    /**
     * <code>.com.giyeok.bibix.runner.RemoteSourceId remote_source = 5;</code>
     */
    public var remoteSource: com.giyeok.bibix.runner.BibixIdProto.RemoteSourceId
      @JvmName("getRemoteSource")
      get() = _builder.getRemoteSource()
      @JvmName("setRemoteSource")
      set(value) {
        _builder.setRemoteSource(value)
      }
    /**
     * <code>.com.giyeok.bibix.runner.RemoteSourceId remote_source = 5;</code>
     */
    public fun clearRemoteSource() {
      _builder.clearRemoteSource()
    }
    /**
     * <code>.com.giyeok.bibix.runner.RemoteSourceId remote_source = 5;</code>
     * @return Whether the remoteSource field is set.
     */
    public fun hasRemoteSource(): kotlin.Boolean {
      return _builder.hasRemoteSource()
    }
    public val sourceCase: com.giyeok.bibix.runner.BibixIdProto.SourceId.SourceCase
      @JvmName("getSourceCase")
      get() = _builder.getSourceCase()

    public fun clearSource() {
      _builder.clearSource()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.giyeok.bibix.runner.BibixIdProto.SourceId.copy(block: com.giyeok.bibix.runner.SourceIdKt.Dsl.() -> kotlin.Unit): com.giyeok.bibix.runner.BibixIdProto.SourceId =
  com.giyeok.bibix.runner.SourceIdKt.Dsl._create(this.toBuilder()).apply { block() }._build()

val com.giyeok.bibix.runner.BibixIdProto.SourceIdOrBuilder.rootSourceOrNull: com.google.protobuf.Empty?
  get() = if (hasRootSource()) getRootSource() else null

val com.giyeok.bibix.runner.BibixIdProto.SourceIdOrBuilder.mainSourceOrNull: com.google.protobuf.Empty?
  get() = if (hasMainSource()) getMainSource() else null

val com.giyeok.bibix.runner.BibixIdProto.SourceIdOrBuilder.remoteSourceOrNull: com.giyeok.bibix.runner.BibixIdProto.RemoteSourceId?
  get() = if (hasRemoteSource()) getRemoteSource() else null

