import git("file://${file.homeDirectory()}/Documents/workspace/autodb3") as autodb3

schema {
  autodbgen = autodb3.genAutoDb3(
    definitionFile = "test/pho.autodb",
    generationConfigFile = "test/pho_autodb_config.pbtxt",
  )
}

import "../a" as a
import git("https://github.com/Joonsoo/sugarproto.git") as sugarproto
from bibix.plugins import ktjvm
from ktjvm import library as ktjvmlib
import file
var ktjvm.compilerVersion = "1.9.10"

var a.zz = "xyz"


fromimporttest = ktjvmlib(srcs = ss)

// x=com.giyeok.bibix.devtest.varredefs::A(x="123", xx="123123", y="456", z="xyz"))
// x2="xyz"
// aa={file(/home/joonsoo/Documents/workspace/bibix/bibix-core/src/test/resources/varredefs/b/test/com), file(/home/joonsoo/Documents/workspace/bibix/bibix-core/src/test/resources/varredefs/b/test/com/giyeok), file(/home/joonsoo/Documents/workspace/bibix/bibix-core/src/test/resources/varredefs/b/test/com/giyeok/a.kt), file(/home/joonsoo/Documents/workspace/bibix/bibix-core/src/test/resources/varredefs/b/test/a.txt)}
// bb=ValueResult(value="0.5.4")
// cc=ValueResult(value={file(/home/joonsoo/Documents/workspace/bibix/bibix-core/src/test/resources/varredefs/b/test/com/giyeok/a.kt)})

x = a.A() // A("123", "456", "xyz")
x2 = a.zz // "xyz"

aa = glob("test/**")
bb = bibix.version
cc = bibix.plugins
ss = glob("test/**/*.kt")

dd = ktjvm.library(srcs=ss)
ee = ktjvm.library(srcs=ss)

action myaction {
  let abc = x
  myaction2()
  file.copyFile("test/a.txt", "test/b.txt")
  a.myaction()
}

action myaction2 {
  file.copyFile("test/a.txt", "test/c.txt")
}

protoGen = sugarproto.generateProto(
  "test/test1.supro",
  "test1.proto",
  protoDirs=[])


actionImpl = ktjvm.library(
  srcs = ["AA.kt"],
  deps = [bibix.base],
)

action def localActionDef() = actionImpl:com.giyeok.bibix.test.AA

action runLocalAction {
  localActionDef()
}
